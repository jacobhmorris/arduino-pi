
SINGLE MOTOR CONTROL - Transmit



// INPUT

int forwardBackPin = A0;
int leftRightPin = A1;





// Variables

int forwardBack;
int leftRight;

int forwards;
int backwards;
int left;
int right;

int Direction;

int Speed;
int reverse = 0;


int a;
int b;
int c;
int d;
int e;
int f;
int g;
int h;

int x;
int y;
int z;


// METHODS

void sendData(){
Serial.print('*');
Serial.print(a);
Serial.print(b);
Serial.print(c);
Serial.print(d);
Serial.print(e);
Serial.print(f);
Serial.print(g);
}




  
void transmissionConversion(){
a = Direction/100;
b = Direction - a*100;
b = b/10;
c = Direction - a*100 - b*10;

d = Speed/100;
e = Speed - d*100;
e = e/10;
f = Speed - d*100 - e*10;

g = reverse;
}


void inputMapping()
{
forwardBack = analogRead(forwardBackPin);
forwards = map(forwardBack, 515, 1013, 0, 255);
backwards = map(forwardBack, 480, 358, 0, 255);
backwards = constrain(backwards, 0, 255);
forwards = constrain(forwards, 0, 255);

if(forwards > 1 && backwards <= 0){
  Speed = forwards;
  reverse = 0;
}

 if(backwards > 1 && forwards <= 0){
  Speed = backwards;
  reverse = 1;
 }
 
  else if( forwards < 1 && backwards < 1){Speed = 0; reverse = 0;}




leftRight = analogRead(leftRightPin);
left = map(leftRight, 505, 1012, 90, 180);
right = map(leftRight, 495, 355, 89, 0);
left = constrain(left, 90, 180);
right = constrain(right, 0, 89);
if(right <= 89 && left <= 90){
  Direction = right;}
if(left >= 90 && right >= 89){
  Direction = left;}

}


void setup() {
Serial.begin(19200);
pinMode(forwardBackPin, INPUT);
pinMode(leftRightPin, INPUT);
}

void loop() {
 

  
inputMapping(); 

transmissionConversion();

sendData();

//Serial.println("");Serial.print("Input = ");Serial.print(forwardBack);Serial.println("");delay(500);


delay(15);


}



=====================================


SINGLE MOTOR CONTROL - Recieve



#include <Servo.h> 

Servo turningServo; // pin 9

// OUTPUT

int speedPin = 11;
int reversePin = 10;
int readPin = A0;



// VARIABLES
int servoAngle;
int Speed;
int Direction;
int reverse;


int cmd;

int a;
int b;
int c;
int d;
int e;
int f;
int g = 0;
int h;

//METHODS




void servoAlign(){turningServo.write(servoAngle);}

void speedWrite(){analogWrite(speedPin, Speed);digitalWrite(reversePin, reverse);}



  
void inputRead(){
a = Serial.read() - '0';           
b = Serial.read() - '0';
c = Serial.read() - '0';
d = Serial.read() - '0';           
e = Serial.read() - '0';
f = Serial.read() - '0';
g = Serial.read() - '0';           
//h = Serial.read() - '0';


servoAngle = a*100 + b*10 + c;
servoAngle = map(servoAngle, 0, 180, 180, 0);
servoAngle = constrain(servoAngle, 20, 160);

Speed = d*100 + e*10 + f;
Speed = constrain(Speed, 0, 255);

if(g == 0){reverse = LOW;}
if(g == 1){reverse = HIGH;}



}

   

   

void setup() {

  Serial.begin(19200);
turningServo.attach(9);

pinMode(speedPin, OUTPUT);
pinMode(reversePin, OUTPUT);
}


void loop() {

if(Serial.available() >= 4){
   delay(10);
   cmd = Serial.read();
   if(cmd == '*'){
   inputRead();
   servoAlign();
   speedWrite();
   
   
     }   

   
}
}



================================


//DUAL MOTOR CONTROL - Recieve



// OUTPUT

int speedRightOutputPin = 11;
int directionRightOutputPin = 12;
int speedLeftOutputPin = 9;
int directionLeftOutputPin = 10;

int ledPin = 13;

// VARIABLES

int leftSpeed;
int leftDirection;
int rightSpeed;
int rightDirection;

int cmd;

int a;
int b;
int c;
int d;
int e;
int f;
int g;
int h;



void sendData(){
/*
  1Serial.print(cmd);
Serial.print(a);
Serial.print(b);
Serial.print(c);
Serial.print(d);
Serial.print(e);
Serial.print(f);
Serial.print(g);
Serial.print(h);*/

Serial.println(leftSpeed);
}


  
void inputRead(){
a = Serial.read() - '0';           
b = Serial.read() - '0';
c = Serial.read() - '0';
d = Serial.read() - '0';           
e = Serial.read() - '0';
f = Serial.read() - '0';
g = Serial.read() - '0';           
h = Serial.read() - '0';





leftSpeed = a*100 + b*10 + c;
rightSpeed = e*100 + f*10 + g;
leftDirection = d;
rightDirection = h;





}


   
void inputWrite(){
analogWrite(speedRightOutputPin, leftSpeed);
analogWrite(speedLeftOutputPin, rightSpeed);
digitalWrite(directionRightOutputPin, leftDirection);
digitalWrite(directionLeftOutputPin, rightDirection);
}
 
  

void setup() {
Serial.begin(19200);
pinMode(speedRightOutputPin, OUTPUT);
pinMode(directionRightOutputPin, OUTPUT);
pinMode(speedLeftOutputPin, OUTPUT);
pinMode(directionLeftOutputPin, OUTPUT);
pinMode(ledPin, OUTPUT);}



void loop() {

  if(Serial.available() > 0){
    
    delay(10);
    
    cmd = Serial.read() - '0';
    
    if(cmd == 9){
  
      
      
  inputRead();
 
  sendData(); 
 
  inputWrite();
   }
  }


}



=====================

DUAL MOTOR CONTROL - Transmit


// INPUT

int forwardBackPin = A0;
int leftRightPin = A1;





// Variables

int forwardBack;
int leftRight;

int forwards;
int backwards;
int left;
int right;


int speedRight;
int speedLeft;
int directionLeft;
int directionRight;


int a;
int b;
int c;
int d;
int e;
int f;
int g;
int h;


// METHODS

void valueReset(){
speedLeft = 0;
speedRight = 0;
forwards = 0;
backwards = 0;
directionRight = 0;
directionLeft = 0;
}

void sendData(){
Serial.print(9);
Serial.print(a);
Serial.print(b);
Serial.print(c);
Serial.print(d);
Serial.print(e);
Serial.print(f);
Serial.print(g);
Serial.print(h);


}

void speedDebug(){
  
  Serial.print("Speed Left  ");
  if(directionLeft == 0){
  Serial.print("Forward     -   ");  }
  if(directionLeft == 1){
  Serial.print("Backwards   -   ");  }
  Serial.print(speedLeft);
  Serial.println("");
  Serial.print("Speed Right  ");
  if(directionRight == 0){
  Serial.print("Forward    -   ");  }
  if(directionRight == 1){
  Serial.print("Backwards  -   ");  }
  Serial.print(speedRight);
  Serial.println("");
  delay(500);  }


void motorSpeedCalculation(){

  if(forwards > 10){
    speedLeft = forwards - left;
    directionLeft = 0;
    speedRight = forwards - right;
    directionRight = 0;
  }
  
  if(backwards > 10){
    speedLeft = backwards - left;
    directionLeft = 1;
    speedRight = backwards - right;
    directionRight = 1;
    
    
  }
 
 speedLeft = constrain(speedLeft, 0, 255);
 speedRight = constrain(speedRight, 0, 255);
 
} 
  
void transmissionConversion(){
a = speedLeft/100;
b = speedLeft - a*100;
b = b/10;
c = speedLeft - a*100 - b*10;
d = directionLeft;


e = speedRight/100;
f = speedRight - e*100;
f = f/10;
g = speedRight - e*100 - f*10;
h = directionRight;
}


void inputMapping()
{
forwardBack = analogRead(forwardBackPin);
forwards = map(forwardBack, 510, 1012, 0, 255);
backwards = map(forwardBack, 490, 358, 0, 255);
backwards = constrain(backwards, 0, 255);
forwards = constrain(forwards, 0, 255);

leftRight = analogRead(leftRightPin);
left = map(leftRight, 510, 1012, 0, 255);
right = map(leftRight, 490, 355, 0, 255);
left = constrain(left, 0, 255);
right = constrain(right, 0, 255);
}

void setup() {
Serial.begin(19200);
pinMode(forwardBackPin, INPUT);
pinMode(leftRightPin, INPUT);
}

void loop() {
 

inputMapping(); 

motorSpeedCalculation();

transmissionConversion();



sendData();
Serial.println("");
//speedDebug();

delay(500);

valueReset();
}
